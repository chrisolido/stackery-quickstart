{"stack":"AWSTemplateFormatVersion: 2010-09-09\nTransform: AWS::Serverless-2016-10-31\nResources:\n  QuickstartApi:\n    Type: AWS::Serverless::Api\n    Properties:\n      Name: !Sub\n        - ${ResourceName} From Stack ${StackTagName} Environment ${EnvironmentTagName}\n        - ResourceName: QuickstartApi\n      StageName: !Ref EnvironmentAPIGatewayStageName\n      DefinitionBody:\n        swagger: '2.0'\n        info: {}\n        paths:\n          /items:\n            get:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${getItems.Arn}/invocations\n              responses: {}\n          /newItems:\n            post:\n              x-amazon-apigateway-integration:\n                httpMethod: POST\n                type: aws_proxy\n                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${newItem.Arn}/invocations\n              responses: {}\n      EndpointConfiguration: REGIONAL\n      TracingEnabled: true\n      Cors:\n        AllowHeaders: '''Authorization,Content-Type'''\n        AllowOrigin: '''*'''\n  newItem:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-newItem\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: newItem\n      CodeUri: src/newItem\n      Handler: handler.handler\n      Runtime: python3.7\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref Items\n      Events:\n        QuickstartApiPOSTnewItems:\n          Type: Api\n          Properties:\n            Path: /newItems\n            Method: POST\n            RestApiId: !Ref QuickstartApi\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref Items\n          TABLE_ARN: !GetAtt Items.Arn\n  getItems:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-getItems\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: getItems\n      CodeUri: src/getItems\n      Handler: handler.handler\n      Runtime: python3.7\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - DynamoDBCrudPolicy:\n            TableName: !Ref Items\n      Events:\n        QuickstartApiGETitems:\n          Type: Api\n          Properties:\n            Path: /items\n            Method: GET\n            RestApiId: !Ref QuickstartApi\n      Environment:\n        Variables:\n          TABLE_NAME: !Ref Items\n          TABLE_ARN: !GetAtt Items.Arn\n  Items:\n    Type: AWS::DynamoDB::Table\n    Properties:\n      AttributeDefinitions:\n        - AttributeName: id\n          AttributeType: S\n      BillingMode: PAY_PER_REQUEST\n      KeySchema:\n        - AttributeName: id\n          KeyType: HASH\n      StreamSpecification:\n        StreamViewType: NEW_AND_OLD_IMAGES\n      TableName: !Sub ${AWS::StackName}-Items\n  Frontend:\n    Type: AWS::S3::Bucket\n    Properties:\n      BucketName: !Sub ${AWS::StackName}-frontend-${AWS::AccountId}\n      WebsiteConfiguration:\n        IndexDocument: index.html\n  deployFrontend:\n    Type: AWS::Serverless::Function\n    Properties:\n      FunctionName: !Sub ${AWS::StackName}-deployFrontend\n      Description: !Sub\n        - Stack ${StackTagName} Environment ${EnvironmentTagName} Function ${ResourceName}\n        - ResourceName: deployFrontend\n      CodeUri: src/deployFrontend\n      Handler: index.handler\n      Runtime: nodejs8.10\n      MemorySize: 3008\n      Timeout: 30\n      Tracing: Active\n      Policies:\n        - AWSXrayWriteOnlyAccess\n        - S3CrudPolicy:\n            BucketName: !Ref Frontend\n      Environment:\n        Variables:\n          BUCKET_NAME: !Ref Frontend\n          BUCKET_ARN: !GetAtt Frontend.Arn\n  deployFrontendDeployTrigger:\n    Type: Custom::FunctionDeployTrigger\n    Properties:\n      ServiceToken: !GetAtt deployFrontend.Arn\n      DeploymentTimestamp: !Ref DeploymentTimestamp\nParameters:\n  StackTagName:\n    Type: String\n    Description: Stack Name (injected by Stackery at deployment time)\n  EnvironmentTagName:\n    Type: String\n    Description: Environment Name (injected by Stackery at deployment time)\n  EnvironmentAPIGatewayStageName:\n    Type: String\n    Description: Environment name used for API Gateway Stage names (injected by Stackery at deployment time)\n  DeploymentTimestamp:\n    Type: Number\n    Description: Deployment preparation timestamp in milliseconds Since Epoch (injected by Stackery at deployment time)\n"}
